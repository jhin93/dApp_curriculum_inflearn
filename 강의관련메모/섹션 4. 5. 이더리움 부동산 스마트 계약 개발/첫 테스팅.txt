

0:00 | 첫 테스트 스크립트 작성

    블록체인은 배포하면 수정이 불가능하기 때문에 최대한 많은 테스팅을 하고 메인넷에 배포해야 함.
    test 폴더에 스크립트 파일 하나 생성.

    트러플은 mocha 테스팅 프레임워크를 사용.
    assertion은 chai를 사용.
    (https://ko.docs.klaytn.com/smart-contract/testing-guide 3) 자바스크립트로 테스트 작성하기 참고)

    이미 많이 검증된 프레임워크를 사용한다는 것

    1. realestate 컨트랙을 가져와서 변수로 접근할 수 있게 함.
    var RealEstate = artifacts.require("./RealEstate.sol");

    2. 컨트랙을 테스팅할거고 2개의 인자를 받음. 1번째 인자는 테스팅할 컨트랙의 이름, 2번째 인자는 accounts(계정)을 콜백으로 받는 함수.
    contract('RealEstate', function(accounts) {})
    accounts는 현재 연결된 노드에서 쓸 수 있는 계정들(현재 열려있는 가나슈의 10개의 계정들)

    3.RealEstate를 저장할 변수 선언.
    var realEstateInstance;

    4. it을 통해 무슨 내용의 테스팅을 진행할 건지 정의.
    it("컨트랙의 소유자 초기화 테스팅", function() {
        
    });

    - https://ui.toast.com/fe-guide/ko_TEST
    - 여기서 테스트에 대해 파악하고 it 사용법, 단언(assertion) 라이브러리에 대해 알아놓을 것.

    5.RealEstate 컨트랙이 배포가 됐다면, then을 통해 컨트랙에 인스턴스를 받음.
    return RealEstate.deployed().then(function(instance){

    6. 변수에 콜백으로 받은 instance 대입
    realEstateInstance = instance;

    7. instance를 통해 배포된 컨트랙의 상태변수 owner를 불러옴.
    return realEstateInstance.owner.call();

    8. then을 통해 콜백으로 owner의 값을 받음.
    .then(function(owner){})

    9. 받은 owner가 예상한 값과 맞는지 assertion을 통해 확인.
    assert.equal()
    assert.equal()은 3가지를 받음. 첫번째는 리턴된 실제값(대문자화) - owner.toUppercase() 
                                두번째는 내가 예상한 값(=배포할 때 쓰인 계정)(대문자화) - accounts[0].toUpperCase()
                                    대문자화 시키는 이유 : 리턴된 실제값이 소문자로 리턴됨. 가나슈 계정은 대문자, 소문자 섞여있음. 확인을 위해 대문자로 통일.
                                세번째는 실제값과 예상값이 다른 때 에러 메세지를 정의 - "owner가 가나슈 첫번째 계정과 동일하지 않습니다."


------------------------------------------ 테스트 케이스 완성. ------------------------------------------


5:13 | 트러플 테스트 커맨드를 통해 테스트 케이스가 통과하는 지 확인.

    5.2 realestate 루트에서 테스트
    명령어 : truffle test --network ganache
    가나슈가 실행되고, 컨트랙이 배포된 상태여야 함.

    테스트 성공)
    ➜  5.2 real-estate-starter git:(master) ✗ truffle test --network ganache
    Using network 'ganache'.


    Compiling your contracts...
    ===========================
    > Compiling ./contracts/Migrations.sol
    > Compiling ./contracts/RealEstate.sol
    > Artifacts written to /var/folders/l2/clwmyyn93s1dq0w20lmfvyr40000gn/T/test--9108-SfVvAM48FsB5
    > Compiled successfully using:
    - solc: 0.5.16+commit.9c3226ce.Emscripten.clang



    Contract: RealEstate
        ✓ 컨트랙의 소유자 초기화 테스팅 (77ms)


    1 passing (219ms)

    owenr가 가나슈 첫번째 계정과 동일하다는 것.

6:26 | 강제로 테스트를 실패하게 해서 에러 메세지도 확인.

    assert.equal()에서 두번째 인자값을 다르게 받음. 가나슈의 첫번째 계정이 아닌 두번째 계정으로.
    accounts[1].toUpperCase()
    다시 테스트 실행. truffle test --network ganache

    테스트 실패)
    ➜  5.2 real-estate-starter git:(master) ✗ truffle test --network ganache
    Using network 'ganache'.


    Compiling your contracts...
    ===========================
    > Compiling ./contracts/Migrations.sol
    > Compiling ./contracts/RealEstate.sol
    > Artifacts written to /var/folders/l2/clwmyyn93s1dq0w20lmfvyr40000gn/T/test--10038-s6S4V84tERWi
    > Compiled successfully using:
    - solc: 0.5.16+commit.9c3226ce.Emscripten.clang



    Contract: RealEstate
        1) 컨트랙의 소유자 초기화 테스팅
        > No events were emitted


    0 passing (235ms)
    1 failing

    1) Contract: RealEstate
        컨트랙의 소유자 초기화 테스팅:

        owner가 가나슈 첫번째 계정과 동일하지 않습니다.
        + expected - actual

        -0X20BB5789F444E47A88C366F0BFE41ECB3C75BD4C // 리턴된 실제값
        +0X2DCCA9B61E50D79A90A813FCD6A42C3A3AC52E6F // 예상값
        
        at /Users/kimjinkyung/Desktop/dApp_curriculum_inflearn/Blockchain/real-estate/5.2 real-estate-starter/test/TestRealEstate.js:11:20
        at processTicksAndRejections (node:internal/process/task_queues:94:5)

    리턴된 실제값과 예상값이 출력됨.

