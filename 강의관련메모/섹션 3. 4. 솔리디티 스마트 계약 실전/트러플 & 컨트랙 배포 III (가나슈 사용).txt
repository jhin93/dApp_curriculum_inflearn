

0:19 | 트러플에서 가나슈 네트워크에 연결

    가나슈 실행.
    truffle-config.js 의 module.exports 내부를 비움. 그리고 다음과 같이 입력.
    networks: {
        ganache: {
            host: "localhost",
            port: 8545,
            network_id: "*"
        }
    }

    강의는 host: "localhost"라고 하는데 실제론 HTTP://127.0.0.1:8545라고 되어 있음.
    설정에서도 localhost는 확인 불가. 일단 진행. 
    port: 8545 일치, network_id: "*" *은 아무 아이디에서나 돌아가도록 설정한 것. 5777이라고 명시 안해도 알아서 가져옴.

1:39 | 컨트랙을 가나슈 노드에 배포. 

    트러플 콘솔에 접속하지 않은 상태로 바로 배포.
    명령어 입력 : truffle migrate --compile-all --reset --network ganache

    네트워크는 가나슈를 쓸거라고 명시해주어야 함.

    컴파일 되면서 build/contracts 안에 있는 아티팩트 파일들이 업데이트 될 것.
    Mycontract.json의 network를 확인해보면, id: "5777", address:0x0b4B148... 로 시작하는 항목이 추가됨.
    새로운 네트워크 id 생성된 것. address:0x0b4B148... 이 주소에 컨트랙 존재.

    가나슈 노드에 컨트랙을 배포하면서 첫번째 코인베이스 계정이 디폴트로 사용됨. 이 계정으로 가스비 지불.
    상단 TRANSACTION 탭에서 배포하면서 생긴 트랜잭션을 볼 수 있음.

    CONTRACT CREATION : 두 개의 컨트랙을 배포하면서 생긴 트랜잭션이다.
    CONTRACT CALL : 'Migrations' 컨트랙의 last_completed_migration 변수를 업데이트 하면서 생긴 트랜잭션. 예전 설명과 동일.
        예전 설명)
        그럼 2,4번째 트랜잭션은 어디서 온 것일까? 
        바로 트러플 내부에서 Migration.sol 파일의 'uint public last_completed_migration;' 변수를 업데이트하기 위해 쓰인 트랜잭션이다.
        콘솔에 migrate 커맨드를 실행하면서 2개의 스크립트를 실행. 그 결과, last_completed_migration 변수의 값이 2로 업데이트 됨.




    TRANSACTION 탭에 트랜잭션이 표시되는 순서는 아래에서 위다.

    1. CREATED CONTRACT ADDRESS (CONTRACT CREATION)
       0x27B61efB1824DA5611941285C320386DA052EfeC
    
    먼저 Migration.sol(0x27B61) 컨트랙을 배포하고

    2. TO CONTRACT ADDRESS (CONTRACT CALL)
       0x27B61efB1824DA5611941285C320386DA052EfeC

    Migrations.sol(0x27B61)의 last_completed_migration 변수를 업데이트한다.

    3. CREATED CONTRACT ADDRESS (CONTRACT CREATION)
       0x0b4B148C6AB76335899A1294c22f48964cB04869

    이후 MyContract.sol(0x0b4B) 컨트랙을 배포하고

    4. TO CONTRACT ADDRESS (CONTRACT CALL)
       0x27B61efB1824DA5611941285C320386DA052EfeC

    한번 더 Migrations.sol(0x27B61)의 last_completed_migration 변수를 업데이트한다.
    last_completed_migration 변수의 값이 업데이트 됨.

    
3:40 | 트러플 콘솔에서 가나슈에 배포된 컨트랙과 소통

    명령어 : truffle console --network ganache

    저번 강좌에 했던 것들 반복.
    MyContract의 인스턴스를 전역변수에 저장.
    let app = await Mycontract.deployed()

    두번째 계정으로 setStudentInfo 불러오기.
    app.setStudentInfo(1111, "sejong", "male", 7, {from: accounts[1]})
    - 트랜잭션 영수증을 받으면서 두번째 계정(0x2DcCa)의 Balance가 줄어들어야 하는데 왜 100.00 ETH지?
    TRANSACTION 탭에는 새로운 5번째 트랜잭션이 추가됨. 가스 사용도 됨(85680). 근데 왜 100.00 ETH지?
    한번 더 실행해봐도 그대로임. 
    아래 명령어로 새로 입력을 해도 안줄어듬.
    app.setStudentInfo(2222, "sun", "female", 8, {from: accounts[1]})

5:38 | 입력한 데이터 불러오기

    명령어 : app.getStudentInfo(1111)
    콘솔에서 데이터가 잘 불러와지고, 트랜잭션도 잘 추가됨(to: '0x0b4b148). 0x0b4b148은 'Mycontract' 컨트랙의 address.

    가나슈 인터페이스로 직관적으로 테스팅 가능.
    트러플은 스마트 컨트랙의 빌드와 배포를 간편화, 배포하는 사이클 관리, 스마트 컨트랙과 소통 가능.
    가나슈와는 비주얼 인터페이스 사용 가능.





























